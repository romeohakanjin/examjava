package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2018-07-03T11:53:34.121+02:00
 * Generated source version: 3.1.12
 * 
 */
@WebService(targetNamespace = "http://webservice/", name = "WebServiceSessionBean")
@XmlSeeAlso({ObjectFactory.class})
public interface WebServiceSessionBean {

    @WebMethod(action = "accuseReception")
    @RequestWrapper(localName = "getAccuseReception", targetNamespace = "http://webservice/", className = "webservice.GetAccuseReception")
    @ResponseWrapper(localName = "getAccuseReceptionResponse", targetNamespace = "http://webservice/", className = "webservice.GetAccuseReceptionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.AccuseReception getAccuseReception(
        @WebParam(name = "idAccuseReception", targetNamespace = "")
        int idAccuseReception
    );

    @WebMethod(action = "findAllCommande")
    @RequestWrapper(localName = "findAllCommande", targetNamespace = "http://webservice/", className = "webservice.FindAllCommande")
    @ResponseWrapper(localName = "findAllCommandeResponse", targetNamespace = "http://webservice/", className = "webservice.FindAllCommandeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservice.Commande> findAllCommande();

    @WebMethod(action = "getLivraisons")
    @RequestWrapper(localName = "getLivraisons", targetNamespace = "http://webservice/", className = "webservice.GetLivraisons")
    @ResponseWrapper(localName = "getLivraisonsResponse", targetNamespace = "http://webservice/", className = "webservice.GetLivraisonsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservice.Livraison> getLivraisons();

    @WebMethod(action = "getFactures")
    @RequestWrapper(localName = "getFactures", targetNamespace = "http://webservice/", className = "webservice.GetFactures")
    @ResponseWrapper(localName = "getFacturesResponse", targetNamespace = "http://webservice/", className = "webservice.GetFacturesResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservice.Facture> getFactures();

    @WebMethod(action = "findAllPaiement")
    @RequestWrapper(localName = "findAllPaiement", targetNamespace = "http://webservice/", className = "webservice.FindAllPaiement")
    @ResponseWrapper(localName = "findAllPaiementResponse", targetNamespace = "http://webservice/", className = "webservice.FindAllPaiementResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservice.Paiement> findAllPaiement();

    @WebMethod(action = "findFournisseurById")
    @RequestWrapper(localName = "findFournisseurById", targetNamespace = "http://webservice/", className = "webservice.FindFournisseurById")
    @ResponseWrapper(localName = "findFournisseurByIdResponse", targetNamespace = "http://webservice/", className = "webservice.FindFournisseurByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.Fournisseur findFournisseurById(
        @WebParam(name = "id", targetNamespace = "")
        int id
    );

    @WebMethod(action = "getAccusesReceptions")
    @RequestWrapper(localName = "getAccusesReceptions", targetNamespace = "http://webservice/", className = "webservice.GetAccusesReceptions")
    @ResponseWrapper(localName = "getAccusesReceptionsResponse", targetNamespace = "http://webservice/", className = "webservice.GetAccusesReceptionsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservice.AccuseReception> getAccusesReceptions();

    @WebMethod(action = "findCommandeById")
    @RequestWrapper(localName = "findCommandeById", targetNamespace = "http://webservice/", className = "webservice.FindCommandeById")
    @ResponseWrapper(localName = "findCommandeByIdResponse", targetNamespace = "http://webservice/", className = "webservice.FindCommandeByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.Commande findCommandeById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod(action = "facture")
    @RequestWrapper(localName = "getFacture", targetNamespace = "http://webservice/", className = "webservice.GetFacture")
    @ResponseWrapper(localName = "getFactureResponse", targetNamespace = "http://webservice/", className = "webservice.GetFactureResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.Facture getFacture(
        @WebParam(name = "idFacture", targetNamespace = "")
        int idFacture
    );

    @WebMethod(action = "ajoutCommande")
    @RequestWrapper(localName = "ajoutCommande", targetNamespace = "http://webservice/", className = "webservice.AjoutCommande")
    @ResponseWrapper(localName = "ajoutCommandeResponse", targetNamespace = "http://webservice/", className = "webservice.AjoutCommandeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String ajoutCommande(
        @WebParam(name = "date", targetNamespace = "")
        webservice.Timestamp date,
        @WebParam(name = "produit", targetNamespace = "")
        java.lang.String produit,
        @WebParam(name = "quantite", targetNamespace = "")
        int quantite,
        @WebParam(name = "prix", targetNamespace = "")
        float prix,
        @WebParam(name = "idUtilisateur", targetNamespace = "")
        int idUtilisateur,
        @WebParam(name = "idFournisseur", targetNamespace = "")
        int idFournisseur
    );

    @WebMethod(action = "findUtilisateurByLogin")
    @RequestWrapper(localName = "findUtilisateurByLogin", targetNamespace = "http://webservice/", className = "webservice.FindUtilisateurByLogin")
    @ResponseWrapper(localName = "findUtilisateurByLoginResponse", targetNamespace = "http://webservice/", className = "webservice.FindUtilisateurByLoginResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.Utilisateur findUtilisateurByLogin(
        @WebParam(name = "login", targetNamespace = "")
        java.lang.String login
    );

    @WebMethod(action = "connexion")
    @RequestWrapper(localName = "connexion", targetNamespace = "http://webservice/", className = "webservice.Connexion")
    @ResponseWrapper(localName = "connexionResponse", targetNamespace = "http://webservice/", className = "webservice.ConnexionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean connexion(
        @WebParam(name = "login", targetNamespace = "")
        java.lang.String login,
        @WebParam(name = "mdp", targetNamespace = "")
        java.lang.String mdp
    );

    @WebMethod(action = "livraison")
    @RequestWrapper(localName = "getLivraison", targetNamespace = "http://webservice/", className = "webservice.GetLivraison")
    @ResponseWrapper(localName = "getLivraisonResponse", targetNamespace = "http://webservice/", className = "webservice.GetLivraisonResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservice.Livraison getLivraison(
        @WebParam(name = "idLivraison", targetNamespace = "")
        int idLivraison
    );
}
